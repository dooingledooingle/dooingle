name: frontend deployment # 프론트엔드 코드 배포 - secrets.VITE_PRODUCTION_ENV 내용은 AWS EC2 관련 환경 변수
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - frontend/main
jobs:
  deploy-production:
    runs-on: ubuntu-latest
    steps:
      # (1) 체크아웃
      - name: Checkout
        uses: actions/checkout@v4.1.1

      # (2) .env 파일 작성 - secrets.VITE_PRODUCTION_ENV 내용은 AWS EC2 관련 환경 변수
      - name: Make VITE .env file
        run: touch ./dooingle-front/.env \
          && echo "${{ secrets.VITE_PRODUCTION_ENV }}" > ./dooingle-front/.env

      # (3) Vercel CLI 설치
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # (4) Vercel production 환경 관련 정보를 가져옴
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # (5) Vercel CLI를 통한 빌드 - 이 때 Vite를 알아서 사용함
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # (6) Vercel에 배포
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
